[{"path":[]},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://davidchall.github.io/ggip/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://davidchall.github.io/ggip/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to ggip","title":"Contributing to ggip","text":"outlines propose change ggip. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://davidchall.github.io/ggip/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to ggip","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://davidchall.github.io/ggip/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to ggip","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://davidchall.github.io/ggip/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to ggip","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://davidchall.github.io/ggip/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to ggip","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://davidchall.github.io/ggip/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to ggip","text":"Please note ggip project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://davidchall.github.io/ggip/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 David Hall Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://davidchall.github.io/ggip/articles/ggip.html","id":"configuring-the-coordinate-system","dir":"Articles","previous_headings":"","what":"Configuring the coordinate system","title":"Introduction to ggip","text":"central component ggip plot coordinate system, specified coord_ip(). determines exactly IP data mapped 2D grid, ensures mapping applied consistently across plotted layers. coord_ip() function must called per plot, takes arguments: details mapping found vignette(\"visualizing-ip-data\").","code":""},{"path":"https://davidchall.github.io/ggip/articles/ggip.html","id":"internal-data-transformation","dir":"Articles","previous_headings":"","what":"Internal data transformation","title":"Introduction to ggip","text":"Behind scenes, ggip searches plotted data sets columns ip_address() ip_network() vectors. matching column, replaces vector data frame containing original IP data mapped Cartesian coordinates. means plotted data set now contains nested data frame column. example, consider data set featuring two columns. label column character vector address column ip_address() vector. data set transformed address column now data frame. contains ip column original ip_address() vector, x y columns Cartesian coordinates 2D grid. transformed data frame columns available specifying aesthetics. nested columns can accessed using usual $ syntax (see examples ).","code":"#> # A tibble: 3 × 2 #>   label         address #>   <chr>       <ip_addr> #> 1 A             0.0.0.0 #> 2 B         192.168.0.1 #> 3 C     255.255.255.255 #> # A tibble: 3 × 2 #>   label      address$ip    $x    $y #>   <chr>       <ip_addr> <int> <int> #> 1 A             0.0.0.0     0   255 #> 2 B         192.168.0.1   214   142 #> 3 C     255.255.255.255   255   255"},{"path":"https://davidchall.github.io/ggip/articles/ggip.html","id":"using-layers-from-ggplot2-and-other-packages","dir":"Articles","previous_headings":"","what":"Using layers from ggplot2 and other packages","title":"Introduction to ggip","text":"Layers ggplot2 external packages don’t know internal data transformation used ggip. reason, layers expect positional aesthetics (e.g. x y) specified explicitly. Fortunately, can extract Cartesian coordinates data frame columns using $ syntax. example, plot ip_address() vector points accompanied labels. Note ’ve specified x, y label aesthetics top level plot, geom_point() geom_label() layers picked later.  Similarly, plot ip_network() vectors using layers corresponding rectangles.  Note: small gaps rectangles networks mapped onto 2D grid (.e. discrete), whereas ggplot2 visualizes continuous 2D plane. can resolved adding/subtracting 0.5 positional aesthetics. However, gap often helpful distinguish networks.","code":"tibble(address = ip_address(c(\"0.0.0.0\", \"128.0.0.0\", \"192.168.0.1\"))) %>%   ggplot(aes(x = address$x, y = address$y, label = address$ip)) +   geom_point() +   geom_label(nudge_x = c(10, 0, -10), nudge_y = -10) +   coord_ip(expand = TRUE) +   theme_ip_light() iana_ipv4 %>%   ggplot(aes(xmin = network$xmin, ymin = network$ymin, xmax = network$xmax, ymax = network$ymax)) +   geom_rect(aes(fill = allocation)) +   scale_fill_brewer(palette = \"Accent\", name = NULL) +   coord_ip() +   theme_ip_dark()"},{"path":"https://davidchall.github.io/ggip/articles/ggip.html","id":"using-ggip-layers","dir":"Articles","previous_headings":"","what":"Using ggip layers","title":"Introduction to ggip","text":"Layers ggip know internal data transformation, take ip aesthetic corresponding data frame column. can automatically extract relevant positional information. easier name data frame column also name original ip_address() ip_network() column input data set. example, plot heatmap ip_address() vector.","code":"tibble(address = sample_ipv4(10000)) %>%   ggplot(aes(ip = address)) +   stat_summary_address() +   scale_fill_viridis_c(guide = \"none\") +   coord_ip() +   theme_ip_dark()"},{"path":"https://davidchall.github.io/ggip/articles/visualizing-ip-data.html","id":"reducing-visualized-information","dir":"Articles","previous_headings":"","what":"Reducing visualized information","title":"Visualizing IP data","text":"example, consider 32-bit representation IPv4 address 192.168.0.124. wanted visualize single address within full context IPv4 address space, ’d need simultaneously display \\(2^{32}\\) discrete levels (roughly 4.3 billion).  reduce visualized information, show subnetwork full address space. example, display 192.0.0.0/8 network using coord_ip(canvas_network = ip_network(\"192.0.0.0/8\")). effectively filter addresses leading 8 bits match specified network, thereby reducing number discrete levels \\(2^{24}\\) (roughly 16.8 million).  Alternatively, make discrete level represent network addresses. , ’d need use summary function reduce network data single value. example, make discrete level represent network prefix length 24 using coord_ip(pixel_prefix = 24). effectively neglect trailing 8 bits 32-bit address, thereby reducing number discrete levels \\(2^{16}\\) (65,536).  two techniques become even important IPv6 address space, uses 128-bit addresses. Note: prevent accidentally plotting unreasonably large number discrete levels, ggip limits number plotted bits 24. means coord_ip() arguments must satisfy:","code":"pixel_prefix - prefix_length(canvas_network) <= 24"},{"path":"https://davidchall.github.io/ggip/articles/visualizing-ip-data.html","id":"space-filling-curves","dir":"Articles","previous_headings":"","what":"Space-filling curves","title":"Visualizing IP data","text":"Inspired xkcd comic originally published December 2006, use space-filling curve map IP data (one-dimensional) Cartesian coordinates (two-dimensional). means discrete levels become represented pixels. Two curves commonly chosen task: Hilbert curve Morton curve (also known Z curve). Compared space-filling curves, advantageous preserve locality (.e. subnetworks remain close together). curve order represents nested curve therefore determines many data points can visualized. Conversely, choosing number plotted bits (see ) determines order curve. Since space-filling curves fractal, increasing curve order effectively improves image resolution (plotted networks remain overall location).","code":""},{"path":"https://davidchall.github.io/ggip/articles/visualizing-ip-data.html","id":"hilbert-curve","dir":"Articles","previous_headings":"Space-filling curves","what":"Hilbert curve","title":"Visualizing IP data","text":"IP data commonly displayed Hilbert curve optimal locality preservation. curve starts top-left corner ends top-right corner. chosen using coord_ip(curve = \"hilbert\").","code":""},{"path":"https://davidchall.github.io/ggip/articles/visualizing-ip-data.html","id":"morton-curve","dir":"Articles","previous_headings":"Space-filling curves","what":"Morton curve","title":"Visualizing IP data","text":"Morton curve technically offers slightly poorer locality preservation Hilbert curve. However, discontinuous jumps curve actually correspond crossing IP network boundaries. sense, Morton curve natural representation IP network structure. example, start end addresses network always located diagonally across . curve starts top-left corner ends bottom-right corner. chosen using coord_ip(curve = \"morton\").","code":""},{"path":"https://davidchall.github.io/ggip/articles/visualizing-ip-data.html","id":"putting-it-all-together","dir":"Articles","previous_headings":"","what":"Putting it all together","title":"Visualizing IP data","text":"Finally, let’s consider specific example. coordinate system use 2nd order Hilbert curve visualize entire IPv4 address space, vertex represents /4 network.","code":"coord_ip(   canvas_network = ip_network(\"0.0.0.0/0\"),   pixel_prefix = 4,   curve = \"hilbert\" )"},{"path":"https://davidchall.github.io/ggip/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Hall. Author, maintainer.","code":""},{"path":"https://davidchall.github.io/ggip/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hall D (2023). ggip: Data Visualization IP Addresses Networks. https://davidchall.github.io/ggip/, https://github.com/davidchall/ggip.","code":"@Manual{,   title = {ggip: Data Visualization for IP Addresses and Networks},   author = {David Hall},   year = {2023},   note = {https://davidchall.github.io/ggip/, https://github.com/davidchall/ggip}, }"},{"path":"https://davidchall.github.io/ggip/index.html","id":"ggip-","dir":"","previous_headings":"","what":"ggip","title":"ggip","text":"ggip {ggplot2} extension visualizing IP addresses networks stored {ipaddress} vectors. key features: IP data mapped 2D plane unified coordinate system Compatible existing ggplot2 layers Custom IP-specific layers common use cases Full support IPv4 IPv6 address spaces","code":""},{"path":"https://davidchall.github.io/ggip/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ggip","text":"can install released version ggip CRAN : can install development version GitHub:","code":"install.packages(\"ggip\") # install.packages(\"remotes\") remotes::install_github(\"davidchall/ggip\")"},{"path":"https://davidchall.github.io/ggip/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"ggip","text":"Plotting {ggip} follows conventions set {ggplot2}. major difference coord_ip() required map IP data 2D grid (addresses points networks rectangles). Learn vignette(\"ggip\"). ’s quick showcase ’s possible:","code":"library(tidyverse) library(ggfittext) library(ggip)  ggplot(ip_data) +   stat_summary_address(aes(ip = address)) +   geom_hilbert_outline(color = \"grey80\") +   geom_fit_text(     aes(       xmin = network$xmin, xmax = network$xmax,       ymin = network$ymin, ymax = network$ymax,       label = label     ),     data = iana_ipv4 %>% filter(allocation == \"Reserved\"),     color = \"#fdc086\", grow = TRUE   ) +   scale_fill_viridis_c(name = NULL, trans = \"log2\", na.value = \"black\") +   coord_ip(pixel_prefix = 20) +   theme_ip_dark() #> Warning: Transformation introduced infinite values in discrete y-axis"},{"path":"https://davidchall.github.io/ggip/reference/coord_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate system for IP data — coord_ip","title":"Coordinate system for IP data — coord_ip","text":"ggplot2 coordinate system maps range IP address space onto two-dimensional grid using space-filling curve. coord_ip() forms foundation ggip plot. translates ip_address ip_network vectors Cartesian coordinates, ready use ggplot2 layers (see Accessing Coordinates). ensures layers use common mapping.","code":""},{"path":"https://davidchall.github.io/ggip/reference/coord_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate system for IP data — coord_ip","text":"","code":"coord_ip(   canvas_network = ip_network(\"0.0.0.0/0\"),   pixel_prefix = 16,   curve = c(\"hilbert\", \"morton\"),   expand = FALSE )"},{"path":"https://davidchall.github.io/ggip/reference/coord_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate system for IP data — coord_ip","text":"canvas_network ip_network scalar determines region IP space visualized entire 2D grid. default shows entire IPv4 address space. pixel_prefix integer scalar sets prefix length network represented single pixel. default value 16. Increasing effectively improves resolution plot. curve string choose space-filling curve. Choices \"hilbert\" (default) \"morton\". expand TRUE, adds small expanded margin around data grid. default FALSE.","code":""},{"path":"https://davidchall.github.io/ggip/reference/coord_ip.html","id":"accessing-coordinates","dir":"Reference","previous_headings":"","what":"Accessing Coordinates","title":"Coordinate system for IP data — coord_ip","text":"coord_ip() stores result mapping nested data frame column. means ip_address ip_network column original data set converted data frame column. specifying ggplot2 aesthetics, need use $ access nested data (see Examples). ip_address column replaced data frame containing following columns: ip_network column replaced data frame containing following columns:","code":""},{"path":[]},{"path":"https://davidchall.github.io/ggip/reference/coord_ip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate system for IP data — coord_ip","text":"","code":"suppressPackageStartupMessages(library(dplyr))  tibble(address = ip_address(c(\"0.0.0.0\", \"128.0.0.0\", \"192.168.0.1\"))) %>%   ggplot(aes(x = address$x, y = address$y, label = address$ip)) +   geom_point() +   geom_label(nudge_x = c(10, 0, -10), nudge_y = -10) +   coord_ip(expand = TRUE) +   theme_ip_light()   tibble(network = ip_network(c(\"0.0.0.0/8\", \"224.0.0.0/4\"))) %>%   mutate(     start = network_address(network),     end = broadcast_address(network)   ) %>%   ggplot() +   geom_point(aes(x = start$x, y = start$y), color = \"blue\") +   geom_point(aes(x = end$x, y = end$y), color = \"red\") +   geom_rect(     aes(xmin = network$xmin, xmax = network$xmax, ymin = network$ymin, ymax = network$ymax),     alpha = 0.5, fill = \"grey\"   ) +   coord_ip(curve = \"morton\", expand = TRUE) +   theme_ip_light()"},{"path":"https://davidchall.github.io/ggip/reference/geom_hilbert_outline.html","id":null,"dir":"Reference","previous_headings":"","what":"Hilbert curve outline — geom_hilbert_outline","title":"Hilbert curve outline — geom_hilbert_outline","text":"Computes draws outline Hilbert curve used map IP data Cartesian plane. superimposing outline top ggip plot, guides eye regions close IP address space.","code":""},{"path":"https://davidchall.github.io/ggip/reference/geom_hilbert_outline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hilbert curve outline — geom_hilbert_outline","text":"","code":"geom_hilbert_outline(   mapping = NULL,   data = NULL,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://davidchall.github.io/ggip/reference/geom_hilbert_outline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hilbert curve outline — geom_hilbert_outline","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://davidchall.github.io/ggip/reference/geom_hilbert_outline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Hilbert curve outline — geom_hilbert_outline","text":"geom_curve_outline() understands following aesthetics: ip: ip_network column. default, entire Hilbert curve shown. curve_order: nested curve? (default: 3). closed: curve outline closed ends? (default: FALSE). alpha colour linetype linewidth","code":""},{"path":"https://davidchall.github.io/ggip/reference/geom_hilbert_outline.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Hilbert curve outline — geom_hilbert_outline","text":"x, y start coordinates segment xend, yend end coordinates segment","code":""},{"path":"https://davidchall.github.io/ggip/reference/geom_hilbert_outline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hilbert curve outline — geom_hilbert_outline","text":"","code":"p <- ggplot() + coord_ip() + theme_ip_light()  # default shows curve across entire canvas p + geom_hilbert_outline()   # only show subnetwork p + geom_hilbert_outline(ip = ip_network(\"128.0.0.0/2\"))   # increased nesting p + geom_hilbert_outline(curve_order = 4)   # show multiple networks df <- data.frame(   ip = ip_network(c(\"0.0.0.0/2\", \"128.0.0.0/4\")),   curve_order = c(4, 5),   closed = c(FALSE, TRUE) ) p + geom_hilbert_outline(   aes(ip = ip, curve_order = curve_order, closed = closed),   data = df )"},{"path":"https://davidchall.github.io/ggip/reference/ggip-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggip: Data Visualization for IP Addresses and Networks — ggip-package","title":"ggip: Data Visualization for IP Addresses and Networks — ggip-package","text":"'ggplot2' extension enables visualization IP (Internet Protocol) addresses networks. address space mapped onto Cartesian coordinate system using space-filling curve. Offers full support IPv4 IPv6 (Internet Protocol versions 4 6) address spaces.","code":""},{"path":[]},{"path":"https://davidchall.github.io/ggip/reference/ggip-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggip: Data Visualization for IP Addresses and Networks — ggip-package","text":"Maintainer: David Hall david.hall.physics@gmail.com (ORCID)","code":""},{"path":"https://davidchall.github.io/ggip/reference/ip_to_cartesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Map IP data to Cartesian coordinates — ip_to_cartesian","title":"Map IP data to Cartesian coordinates — ip_to_cartesian","text":"functions used internally coord_ip() map ip_address ip_network vectors Cartesian coordinates. exposed externally support use coordinates outside ggplot2.","code":""},{"path":"https://davidchall.github.io/ggip/reference/ip_to_cartesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map IP data to Cartesian coordinates — ip_to_cartesian","text":"","code":"address_to_cartesian(   address,   canvas_network = ip_network(\"0.0.0.0/0\"),   pixel_prefix = 16,   curve = c(\"hilbert\", \"morton\") )  network_to_cartesian(   network,   canvas_network = ip_network(\"0.0.0.0/0\"),   pixel_prefix = 16,   curve = c(\"hilbert\", \"morton\") )"},{"path":"https://davidchall.github.io/ggip/reference/ip_to_cartesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map IP data to Cartesian coordinates — ip_to_cartesian","text":"address ip_address vector canvas_network ip_network scalar determines region IP space visualized entire 2D grid. default shows entire IPv4 address space. pixel_prefix integer scalar sets prefix length network represented single pixel. default value 16. Increasing effectively improves resolution plot. curve string choose space-filling curve. Choices \"hilbert\" (default) \"morton\". network ip_network vector","code":""},{"path":"https://davidchall.github.io/ggip/reference/ip_to_cartesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map IP data to Cartesian coordinates — ip_to_cartesian","text":"data.frame containing columns: address_to_cartesian(): x y network_to_cartesian(): xmin, ymin, xmax ymax","code":""},{"path":"https://davidchall.github.io/ggip/reference/ip_to_cartesian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map IP data to Cartesian coordinates — ip_to_cartesian","text":"","code":"address_to_cartesian(ip_address(\"192.168.0.1\")) #>     x   y #> 1 241 142  network_to_cartesian(ip_network(\"224.0.0.0/4\")) #>   xmin ymin xmax ymax #> 1  128  192  191  255"},{"path":"https://davidchall.github.io/ggip/reference/stat_summary_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize IP addresses on a heatmap — stat_summary_address","title":"Summarize IP addresses on a heatmap — stat_summary_address","text":"Addresses grouped networks determined pixel_prefix argument coord_ip(). z values summarized summary function fun.","code":""},{"path":"https://davidchall.github.io/ggip/reference/stat_summary_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize IP addresses on a heatmap — stat_summary_address","text":"","code":"stat_summary_address(   mapping = NULL,   data = NULL,   ...,   fun = NULL,   fun.args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://davidchall.github.io/ggip/reference/stat_summary_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize IP addresses on a heatmap — stat_summary_address","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. fun Summary function (see section details). NULL (default), observations simply counted. fun.args list extra arguments pass fun. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://davidchall.github.io/ggip/reference/stat_summary_address.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Summarize IP addresses on a heatmap — stat_summary_address","text":"stat_summary_address() understands following aesthetics (required aesthetics bold): ip: ip_address column z: Value passed summary function (required fun used) fill: Default after_stat(value) alpha","code":""},{"path":"https://davidchall.github.io/ggip/reference/stat_summary_address.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Summarize IP addresses on a heatmap — stat_summary_address","text":"following variables available after_stat(): value: Value summary statistic count: Number observations","code":""},{"path":"https://davidchall.github.io/ggip/reference/stat_summary_address.html","id":"summary-function","dir":"Reference","previous_headings":"","what":"Summary function","title":"Summarize IP addresses on a heatmap — stat_summary_address","text":"data might contain multiple rows per pixel heatmap, summary function reduces information single value display. function receives data column specified z aesthetic also receives arguments specified fun.args. fun argument can specified multiple ways: NULL summary function provided, number observations computed. case, need specify z aesthetic, computed variables value count equal. string name existing function (e.g. fun = \"mean\"). function Either provide existing function (e.g. fun = mean) define new function (e.g. fun = function(x) sum(x^2)). formula function can also created formula. uses .x summarized variable (e.g. fun = ~ sum(.x^2)).","code":""},{"path":"https://davidchall.github.io/ggip/reference/stat_summary_address.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize IP addresses on a heatmap — stat_summary_address","text":"","code":"dat <- data.frame(   ip = sample_ipv4(10000),   weight = runif(10000) )  p <- ggplot(dat, aes(ip = ip)) +   coord_ip() +   theme_ip_light()  # simple count of observations p +   stat_summary_address() +   scale_fill_viridis_c(trans = \"log2\", na.value = \"black\", guide = \"none\") #> Warning: Transformation introduced infinite values in discrete y-axis   # compute mean weight p +   stat_summary_address(aes(z = weight), fun = ~ mean(.x)) +   scale_fill_viridis_c(na.value = \"black\", guide = \"none\")"},{"path":"https://davidchall.github.io/ggip/reference/theme_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Themes for IP data — theme_ip","title":"Themes for IP data — theme_ip","text":"set sensible defaults plots generated ggip. Use ggplot2::theme() want tweak results.","code":""},{"path":"https://davidchall.github.io/ggip/reference/theme_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Themes for IP data — theme_ip","text":"","code":"theme_ip_light(base_size = 11, base_family = \"\")  theme_ip_dark(   background_color = \"black\",   text_color = \"white\",   base_size = 11,   base_family = \"\" )"},{"path":"https://davidchall.github.io/ggip/reference/theme_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Themes for IP data — theme_ip","text":"base_size base font size, given pts. base_family base font family background_color Background color text_color Text color","code":""},{"path":"https://davidchall.github.io/ggip/reference/theme_ip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Themes for IP data — theme_ip","text":"","code":"p <- ggplot(data.frame(ip = ip_address(\"128.0.0.0\"))) +   geom_point(aes(x = ip$x, y = ip$y), color = \"grey\") +   coord_ip()  p + theme_ip_light()   p + theme_ip_dark()"},{"path":"https://davidchall.github.io/ggip/news/index.html","id":"ggip-development-version","dir":"Changelog","previous_headings":"","what":"ggip (development version)","title":"ggip (development version)","text":"Compatible ipaddress 1.0.0.","code":""},{"path":"https://davidchall.github.io/ggip/news/index.html","id":"ggip-030","dir":"Changelog","previous_headings":"","what":"ggip 0.3.0","title":"ggip 0.3.0","text":"CRAN release: 2022-11-09 Compatible latest {ggplot2}. introduced breaking change, aesthetic geom_hilbert_outline() renamed size linewidth. Use {cli} format error messages.","code":""},{"path":"https://davidchall.github.io/ggip/news/index.html","id":"ggip-022","dir":"Changelog","previous_headings":"","what":"ggip 0.2.2","title":"ggip 0.2.2","text":"CRAN release: 2022-09-29 Minor changes compatibility latest {tidyselect}.","code":""},{"path":"https://davidchall.github.io/ggip/news/index.html","id":"ggip-021","dir":"Changelog","previous_headings":"","what":"ggip 0.2.1","title":"ggip 0.2.1","text":"CRAN release: 2022-08-13 Resolve CRAN check notes HTML5 upgrading latest {roxygen}.","code":""},{"path":"https://davidchall.github.io/ggip/news/index.html","id":"ggip-020","dir":"Changelog","previous_headings":"","what":"ggip 0.2.0","title":"ggip 0.2.0","text":"CRAN release: 2020-10-11 new layer geom_hilbert_outline() can overlay outline Hilbert curve. can guide eye regions close IP address space (#16). Improved performance stat_summary_address(), using alternative check missing values (#15). stat_summary_address() now removes data mapped 2D grid (address outside visualized network). warning generated default, can disabled using na.rm argument. new behavior consistent native ggplot2 layers (#15).","code":""},{"path":"https://davidchall.github.io/ggip/news/index.html","id":"ggip-010","dir":"Changelog","previous_headings":"","what":"ggip 0.1.0","title":"ggip 0.1.0","text":"CRAN release: 2020-09-25 First CRAN release. coord_ip() provides unified mapping IP address space 2D grid. stat_summary_address() summarizes IP addresses heatmap. theme_ip_light() theme_ip_dark() offer sensible default theming ggip plots.","code":""}]
