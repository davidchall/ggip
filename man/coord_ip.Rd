% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coord-ip.R
\name{coord_ip}
\alias{coord_ip}
\title{Coordinate system for IP data}
\usage{
coord_ip(
  canvas_network = ip_network("0.0.0.0/0"),
  pixel_prefix = 16,
  curve = c("hilbert", "morton"),
  expand = FALSE
)
}
\arguments{
\item{canvas_network}{An \code{\link[ipaddress:ip_network]{ipaddress::ip_network}} scalar that determines the
network visualized by the plotted canvas. The default shows the entire IPv4
address space.}

\item{pixel_prefix}{An integer scalar that determines the number of addresses
represented by a single pixel. It sets the prefix length of the
corresponding network. The default value is 16.}

\item{curve}{A string to choose the space-filling curve. Choices are
\code{"hilbert"} (default) and \code{"morton"}.}

\item{expand}{If \code{TRUE}, the default, adds a small expansion factor to
the limits to ensure that data and axes don't overlap. If \code{FALSE},
limits are taken exactly from the data or \code{xlim}/\code{ylim}.}
}
\description{
A coordinate system that maps a range of address space onto a two-dimensional
grid using a space-filling curve.
}
\examples{
options(tidyverse.quiet = TRUE)
library(tidyverse)
library(ipaddress)

canvas <- ip_network("0.0.0.0/24")

tibble(address = seq(canvas)) \%>\%
  ggplot() +
  geom_path(aes(x, y)) +
  coord_ip(canvas_network = canvas, pixel_prefix = 32, curve = "hilbert") +
  theme_ip_light() +
  labs(title = "Hilbert curve (3rd order)")

tibble(address = seq(canvas)) \%>\%
  ggplot() +
  geom_path(aes(x, y)) +
  coord_ip(canvas_network = canvas, pixel_prefix = 32, curve = "morton") +
  theme_ip_light() +
  labs(title = "Morton curve (3rd order)")
}
